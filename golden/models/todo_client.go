package models

// this file is generated by 'factor dev' but won't be overwritten. feel free to
// fill in your own client logic here!

import (
	"bytes"
	"io/ioutil"
	"log"
	"net/http"

	"github.com/gorilla/rpc/v2/json"
	"github.com/satori/go.uuid"
)

type TodoClient struct {
}

func (cl *TodoClient) Get(id uuid.UUID) (*Todo, error) {

	url := "http://localhost:3000/rpc"
	args := &GetTodoReq{
		ID: id,
	}
	message, err := json.EncodeClientRequest("TodoServer.Get", args)
	if err != nil {
		log.Fatalf("%s", err)
	}
	req, err := http.NewRequest("POST", url, bytes.NewBuffer(message))
	if err != nil {
		return nil, err
	}
	req.Header.Set("Content-Type", "application/json")
	client := http.DefaultClient
	resp, err := client.Do(req)
	if err != nil {
		return nil, err
	}
	defer resp.Body.Close()
	body, err := ioutil.ReadAll(resp.Body)
	var result GetTodoRes
	bb := bytes.NewBuffer(body)
	err = json.DecodeClientResponse(bb, &result)
	if err != nil {
		return nil, err
	}
	return &result.Data, err
}

// TODO: more
